#!/usr/bin/env zsh
# shellcheck disable=SC2154

autoload -Uz vcs_info

TRAPALRM() {

    if [[ $BUFFER == "" ]]; then
    zle reset-prompt
    fi
}
TMOUT=1

prompt(){

colors=(196 226 46 21 51 198 228 45)
shuffled_colors=($(shuf -e "${colors[@]}"))
color_base=${shuffled_colors[1]}
color_sym=${shuffled_colors[2]}
color_text=${shuffled_colors[3]}

# Get the current distro
distro() {
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        echo "$ID"
    else
        uname -s
    fi
}

# Get the free memory
free_mem() {
    free -h | awk 'NR==2{print $4}'
}

# Get the ts IP address
tsip=$(ip addr show | grep 'inet 100.' | awk '{print $2}' | cut -d'/' -f1 | head -n 1)}

# get the current Git branch
git_branch() {
  git branch 2>/dev/null | sed -n '/\* /s///p'
}



# display the env or branch
which_env() {
    if [[ -n $VIRTUAL_ENV ]]; then
        basename "$VIRTUAL_ENV"
    else
        local branch=$(git_branch)
        if [[ -n $branch ]]; then
            echo "$(basename "$PWD") - $branch"
        else
            echo "$(basename "$PWD")"
        fi
    fi
}

# display decoration
interlude(){
  text="Ô∫É Ô∫è Ô∫ï Ô∫ô Ô∫ù Ô∫° Ô∫• Ô∫© Ô∫´ Ô∫≠ Ô∫Ø Ô∫± Ô∫µ Ô∫π Ô∫Ω ÔªÅ ÔªÖ Ôªâ Ôªç Ôªë Ôªï Ôªô  ÔªÖ Ôªâ Ôªç Ôªë Ôªï Ôªô Ôªù Ôª° Ôª• Ôª© Ôª≠ Ôª±Ô∫É Ô∫è Ô∫ï Ô∫ô Ô∫ù Ô∫° Ô∫• Ô∫© Ô∫´ Ô∫≠ Ô∫Ø Ô∫± Ô∫µ Ô∫π Ô∫Ω ÔªÅ ÔªÖ Ôªâ Ôªç Ôªë Ôªï Ôªô Ôªù Ôª° Ôª• Ôª© Ôª≠ Ôª±"
  interlude=""
  for ((i = 0; i < ${#text}; i++)); do
       # shellcheck disable=SC2128
       interlude+="%F{$colors}%F{${colors[$RANDOM % ${#colors[@]}]}}${text:$i:1}%F{$color_base}"
  done 
  echo $interlude
}

# Prepare components for the prompt
local ts_ip="%F{$color_sym}{%F{$color_base}ip%F{$color_sym}:%F{$color_text} $tsip %F{$color_sym}%F{$color_base}"
local whichenv="%F{$color_sym}{%F{$color_text} $(which_env) %F{$color_sym}}%F{$color_base}"
local freemem="%F{$color_sym}{%F{ $color_base}mem%F{$color_sym}:%F{$color_text} $(free_mem) %F{$color_sym}}%F{$color_base}"
local distnhost="%F{$color_sym}{%F{$color_text} $(distro) %F{$color_sym}-%F{$color_text} %m %F{$color_sym}}%F{$color_base}"
local interlude="%F{$color_sym}{ $(interlude) %F{$color_sym}}%F{$color_base}"
local gitbranch="%F{$color_sym}{%F{$color_base} git%F{$color_sym}:%F{$color_text} $(git_branch) %F{$color_sym}}%F{$color_base}"
# local laststatus="%F{$color_sym}{%F{$color_text} $laststatus %F{$color_sym}}%F{$color_base}"

# Define the left prompt with the user, host, current time, current directory, and Git branch
# shellcheck disable=SC2296
PS1="%$COLUMNS>‚ï°>%F{$color_base}‚ïî‚îÖ>>%F{$color_sym}{%F{$color_text}%n%F{$color_sym}}%F{$color_base}‚îÖ%F{$color_sym}{%F{$color_text}%m%F{$color_sym}}%F{$color_base}‚îÖ%F{$color_sym}%F{$color_base}‚îÖ%F{$color_sym}{%F{$color_text}üïí%*%F{$color_sym}}%F{$color_base}‚îÖ%F{$color_sym}{%F{$color_text}%~%F{$color_sym}}%F{$color_base}‚îÖ$distnhost‚îÖ$ts_ip‚îÖ%F{$color_sym}{%F{$color_text}Ô∑Ω       %F{$color_sym}}%F{$color_base}‚îÖ‚îÖ$freemem‚îÖ‚îÖ‚îÖ$interlude‚îÖ${(l:COLUMNS::‚îÖ:):-}%<<
‚ïö>>$whichenv‚îÖ%F{$color_sym}(üí∞%F{$color_text}‚Çø%F{$color_sym})%F{$color_text}üëâ%F{$color_base}"

# Define the right prompt with the last command status, command duration, and current time
RPROMPT="%F{$color_sym}{%F{$color_text}$laststatus%F{$color_sym}}%F{$color_base}‚îÖ%F{$color_sym}{%F{$color_text}$timer_display%F{$color_sym}}%F{$color_base}‚îÖ%F{$color_sym}[%F{$color_text} %w%F{red} ‚ñº %F{$color_text}%T %F{$color_sym}]%F{$color_base}‚îÖ‚ï°"
export RPROMPT
}

set_start() {
    timer_start=$(date +%s%3N)
}

# get last command status
last_status() {
  if [ "$?" != 0 ] ; then
    echo %F{196}‚úò%f
  else 
  # echo in limegreen
    echo %F{118}‚úî%f
  fi
}

preexec_functions+=(set_start)

precmd_functions+=(promptit)
promptit() {
    laststatus=$(last_status)
    timer_end=$(date +%s%3N)
    timer_duration=$((timer_end - timer_start))
    timer_display=$(printf " %d.%02d s " $((timer_duration / 1000)) $(((timer_duration % 1000) / 10)))
    prompt
}
