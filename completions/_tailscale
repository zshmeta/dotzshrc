#compdef tailscale

#a completion for tailscale

_ts_comp() {
    local -a opts up_opts file_opts


#compdef tailscale

opts=(
  'up:Connect to Tailscale, logging in if needed'
  'down:Disconnect from Tailscale'
  'set:Change specified preferences'
  'login:Log in to a Tailscale account'
  'logout:Disconnect from Tailscale and expire current node key'
  'switch:Switches to a different Tailscale account'
  'configure:Configure the host to enable more Tailscale features'
  'netcheck:Print an analysis of local network conditions'
  'ip:Show Tailscale IP addresses'
  'status:Show state of tailscaled and its connections'
  'ping:Ping a host at the Tailscale layer, see how it routed'
  'nc:Connect to a port on a host, connected to stdin/stdout'
  'ssh:SSH to a Tailscale machine'
  'funnel:Serve content and local servers on the internet'
  'serve:Serve content and local servers on your tailnet'
  'version:Print Tailscale version'
  'web:Run a web server for controlling Tailscale'
  'file:Send or receive files'
  'bugreport:Print a shareable identifier to help diagnose issues'
  'cert:Get TLS certs'
  'lock:Manage tailnet lock'
  'licenses:Get open source license information exit-node update whois'
  'update:Update Tailscale to the latest/different version'
  'whois:Show the machine and user associated with a Tailscale IP v4 or v6'
)

up_opts=(
  '--accept-dns:accept DNS configuration from the admin panel (default true)'
  '--accept-routes:accept routes advertised by other Tailscale nodes (default false)'
  '--advertise-connector:advertise this node as an app connector (default false)'
  '--advertise-exit-node:offer to be an exit node for internet traffic for the tailnet (default false)'
  '--advertise-routes:routes to advertise to other nodes (comma-separated, e.g. 10.0.0.0/8,192.168.0.0/24) or empty string to not advertise routes'
  '--advertise-tags string:comma-separated ACL tags to request; each must start with tag: (e.g. tag:eng,tag:montreal,tag:ssh)'
  '--auth-key string:node authorization key; if it begins with file:, then it s a path to a file containing the authkey'
  '--exit-node string:Tailscale exit node IP or base name for internet traffic, or empty string to not use an exit node'
  '--exit-node-allow-lan-access:Allow direct access to the local network when routing traffic via an exit node default false'
  '--force-reauth:force reauthentication (default false)'
  '--hostname string:hostname to use instead of the one provided by the OS'
  '--json:output in JSON format (WARNING: format subject to change) (default false)'
  '--login-server string:base URL of control server (default https://controlplane.tailscale.com)'
  '--netfilter-mode string:netfilter mode (one of on, nodivert, off) (default on)'
  '--operator string:Unix username to allow to operate on tailscaled without sudo'
  '--qr:show QR code for login URLs (default false)'
  '--reset:reset unspecified settings to their default values (default false)'
  '--shields-up:don\t allow incoming connections (default false)'
  '--snat-subnet-routes:source NAT traffic to local routes advertised with --advertise-routes (default true)'
  '--ssh:run an SSH server, permitting access per tailnet admin\s declared policy (default false)'
  '--timeout duration:maximum amount of time to wait for tailscaled to enter a Running state; default (0s) blocks forever (default 0s)'
)

file_opts=(
  'cp:copy a file to remote'
  'pull:pull a file from remote'
)

login_opts=(
  '--authkey string:node authorization key; if it begins with file:, then it s a path to a file containing the authkey'
  '--login-server stringbase URL of control server (default https://controlplane.tailscale.com)'
  '--qr:show QR code for login URLs (default false)'
  '--reset:reset unspecified settings to their default values (default false)'
  '--shields-up:don\t allow incoming connections (default false)'
  '--timeout duration:maximum amount of time to wait for tailscaled to enter a Running state; default (0s) blocks forever (default 0s)'
)

set_opts=(
  '--accept-dns:accept DNS configuration from the admin panel'
  '--accept-risk:accept risk and skip confirmation for risk  (lose-ssh,all)'
  '--accept-routes:accept routes advertised by other Tailscale nodes'
  '--advertise-connector:offer to be an app connector for domain specific internet traffic for the tailnet'
  '--advertise-exit-node:offer to be an exit node for internet traffic for the tailnet'
  '--advertise-routes:routes to advertise to other nodes (comma-separated, e.g. "10.0.0.0/8,192.168.0.0/24") or empty to not advertise routes'
  '--auto-update:automatically update to the latest available version'
  '--exit-node:Tailscale exit node (IP or base name) for internet traffic, or empty to not use an exit node'
  '--exit-node-allow-lan-access:Allow direct access to the local network when routing traffic via an exit node'
  '--hostname:hostname to use instead of the one provided by the OS'
  '--nickname:nickname for the current account'
  '--operator:Unix username to allow to operate on tailscaled without sudo'
  '--shields-up:dont allow incoming connections'
  '--ssh:run an SSH server, permitting access per tailnet admins declared policy'
  '--update-check:notify about available Tailscale updates'
  '--webclient:run a web server for controlling Tailscale'
  )


    if (( CURRENT == 2 )); then
      _describe 'command' opts
    elif (( CURRENT == 3 )); then
      if [[ ${words[2]} == 'up' ]]; then
        _describe 'options for up' up_opts
      elif [[ ${words[2]} == 'file' ]]; then
        _describe 'options for file' file_opts
      elif [[ ${words[2]} == 'login' ]]; then
        _describe 'options for login' login_opts
      elif [[ ${words[2]} == 'set' ]]; then
        _describe 'options for set' set_opts
      fi
    fi

}

compdef _ts_comp tailscale
